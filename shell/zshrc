# -*- mode:shell-script -*-
path=(/usr/local/sbin /usr/local/bin /usr/sbin /usr/bin /sbin /bin)

# completion
fpath=(~/.zsh/functions ~/.zsh/zsh-completions/src ~/.zsh/completions $fpath)
autoload -U compinit
compinit

# default umask
umask 022

# for move by word
autoload -Uz select-word-style
select-word-style bash
WORDCHARS="${WORDCHARS}:"

# insert last word
autoload -Uz smart-insert-last-word
zle -N insert-last-word smart-insert-last-word

# History
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt hist_ignore_all_dups
setopt hist_ignore_dups
setopt hist_ignore_space
setopt share_history

# key-type is Emacs
bindkey -e

# Like bash C-u behavior
bindkey '^U' backward-kill-line

# Mode/Delete like emacs symbol one
bindkey '^[^B' vi-backward-blank-word
bindkey '^[^F' vi-forward-blank-word
bindkey '^[^K' delete-word

# removed keys(for miss typing)
# I want to bind good function for these keys!!
bindkey -r '^J'

# for incremental search
bindkey '^R' history-incremental-pattern-search-backward
bindkey '^S' history-incremental-pattern-search-forward

# Disable completion command
# following command completion is too slow.
compdef -d java

# not exit Ctrl-D
setopt ignoreeof

# for sighup
setopt NOHUP
setopt nocheckjobs

# stty
stty stop undef

# completion like emacs
zstyle ':completion:*:default' menu select=1

# completion use cache
zstyle ':completion:*' use-cache true

# completion after '='(like --prefix=/usr)
setopt magic_equal_subst

# with slash
setopt noautoremoveslash

# glob expand
setopt null_glob no_nomatch

# print if line is one line
unsetopt promptcr

# Not bell
setopt NO_beep
setopt nolistbeep

# String behind '#' is comment.
setopt interactive_comments

# key binding of command history
autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^P" history-beginning-search-backward-end
bindkey "^N" history-beginning-search-forward-end

# process completion
zstyle ':completion:*:processes' command "ps -u $USER"

# show processing time for long run process
REPORTTIME=10

# setting LANG, this should be UTF-8
export LANG=en_US.UTF-8
export TERM=xterm-256color

# setup ls coloring
local LIST_COLOR='di=34;1' 'ln=35' 'so=32' 'ex=32;1' 'bd=46;34' 'cd=43;34'
zstyle ':completion:*' list-colors $LIST_COLOR
if [[ "$OSTYPE" == "linux-gnu" ]]; then
  alias -g C='| xsel --input --clipboard'
  alias ls='ls --color -F'
  if [[ ! -e ~/.dir_colors ]]; then
    dircolors -p > ~/.dir_colors
  fi
  eval `dircolors ~/.dir_colors -b`
else
  # macOS
  alias -g C='| pbcopy'
  if command -v gls > /dev/null; then
    alias ls='gls --color -F'
  fi
  ## for compiling Emacs
  path=(/usr/local/opt/texinfo/bin(N-/) $path)
fi

# dictionary
export EIJIRO_DIR=${HOME}/local/dict

# alias
alias grep='grep --color=always'
alias e='emacsclient'
alias s='git st '
alias d='git diff '
alias dw='git diff --word-diff '
alias dc='git diff --cached '
alias W='weblio'

# PROMPT
autoload colors
colors
returncode="%(?..%{$fg[red]%} %Berr=%?%b %{${reset_color}%})"
PROMPT="%B%{${fg[yellow]}%}%n@%m:%{${reset_color}%}%b${returncode}%# "

# EDITOR
export EDITOR=vim
export GIT_EDITOR=vim

# PAGER setting
export PAGER='less'
export LESSCHARSET=utf-8

# info
export INFOPATH=/usr/local/share/info:/usr/share/info

# Perl
export PERLDOC_PAGER='less -R' # for new Pod::Perldoc
if [[ -d ~/.plenv/bin ]]; then
  path=($HOME/.plenv/bin $path)
  eval "$(plenv init -)"
fi

# Python
if [[ -e ~/local/python3/bin/activate ]]; then
  export VIRTUAL_ENV_DISABLE_PROMPT=1
  source ~/local/python3/bin/activate
fi

# node.js
path=(~/local/node/bin(N-/) $path)

## Cask
path=(~/.cask/bin(N-/) $path)

# Go Language
if [[ -e /opt/go/bin/go ]]; then
  path=(/opt/go/bin $path)
  export GOROOT=/opt/go
fi

export GOPATH=$HOME/go
path=($GOPATH/bin $path)

# Rust
path=(~/.cargo/bin(N-/) $path)

# .NET core
path=(/usr/local/share/dotnet(N-/) $path)

## show git branch at right prompt
autoload -Uz vcs_info
zstyle ':vcs_info:*' formats '(%b)'
zstyle ':vcs_info:*' actionformats '[%s]-(%b|%a)'
function precmd () {
  psvar=()
  LANG=en_US.UTF-8 vcs_info

  if [[ -n "$vcs_info_msg_0_" ]]; then
     psvar[1]="$vcs_info_msg_0_"
     stashes=$(git stash list 2>/dev/null | wc -l)
     if [ ${stashes} -eq 0 ]; then
       psvar[2]=""
     else
       psvar[2]="@${stashes// /}"
     fi
  fi
}
_DIRPART=%B%{$fg[cyan]%}'[%(5~,%-2~/.../%2~,%~)]'%{$reset_color%}%b
RPROMPT=%B"%1(v|%F{magenta}%1v%f%F{yellow}%2v%f|)"%b${_DIRPART}

autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
add-zsh-hook chpwd chpwd_recent_dirs
zstyle ':chpwd:*' recent-dirs-max 500
zstyle ':chpwd:*' recent-dirs-default yes
zstyle ':completion:*' recent-dirs-insert both
zstyle ':filter-select' case-insensitive yes

# zaw : anything
if [[ -e ~/.zsh/zaw/zaw.zsh ]]; then
  source ~/.zsh/zaw/zaw.zsh
  ZAW_EDITOR='vim'
  bindkey '^x^x' zaw-cdr
  bindkey '^xd' zaw-git-directories
  bindkey '^xb' zaw-git-recent-branches
  bindkey '^x^f' zaw-git-files
fi

# for git completion(too slowly in big repository)
function __git_files () {
  _wanted files expl 'local files' _files
}

## github browse
bindkey -s "^Xww" " hub browse"
bindkey -s "^Xwi" " hub browse -- issues"
bindkey -s "^Xwp" " hub browse -- pulls"

## My commands
zle -N peco-history _peco-history
zle -N delete_previous_word _delete_previous_word
bindkey '^X^R' peco-history
bindkey '^[^U' delete_previous_word

autoload -Uz cde
autoload -Uz cdp
autoload -Uz _peco-history
autoload -Uz _delete_previous_word

# Global alias should be set end of zshrc for avoding variable name confliction
alias -g L='|less -R'
alias -g G='|grep'
alias -g P='|peco'
alias -g J='|jq'

path=($HOME/bin $path)
